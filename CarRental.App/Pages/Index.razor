@page "/"
@using CarRental.Business.Classes
@using CarRental.Common.Enums
@inject BookingProcessor bp


<PageTitle>Car Rental</PageTitle>

<h3>Customers</h3>
<table class="table table-hover w-50 mb-4">
    <thead>
        <tr>
            <th scope="col">SSN</th>
            <th scope="col">Last Name</th>
            <th scope="col">First Name</th>
        </tr>
    </thead>

    <tbody class="table-group-divider">
        @foreach (var person in bp.GetCustomers())
        {
        <tr>
            <td>@person.Ssn</td>
            <td>@person.LastName</td>
            <td>@person.FirstName</td>
        </tr>
        }
    </tbody>
</table>

<h3>Vehicles</h3>
<div class="btn-group btn-group-sm" role="group" aria-label="Filter vehicle table">
    <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked>
    <label for="btnradio1" class="btn btn-outline-primary" @onclick="@(() => vStatus = default)">Show all</label>

    <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off">
    <label for="btnradio2" class="btn btn-outline-success" @onclick="@(() => vStatus = VehicleStatuses.Available)">Show available</label>
    
    <input type="radio" class="btn-check" name="btnradio" id="btnradio3" autocomplete="off">
    <label for="btnradio3" class="btn btn-outline-danger" @onclick="@(() => vStatus = VehicleStatuses.Booked)">Show booked</label>
</div>
<table class="table table-hover mb-4">
    <thead>
        <tr>
            <th scope="col">RegNo</th>
            <th scope="col">Make</th>
            <th scope="col">Odometer [km]</th>
            <th scope="col">Cost per km [SEK]</th>
            <th scope="col">Vehicle Type</th>
            <th scope="col">Cost per day [SEK]</th>
            <th scope="col" class="text-center" style="width: 100px">Status</th>
        </tr>
    </thead>

    <tbody class="table-group-divider">
        @foreach (var vehicle in bp.GetVehicles(vStatus))
        {
        <tr>
            <td>@vehicle.RegNo</td>
            <td>@vehicle.Make</td>
            <td>@vehicle.Odometer</td>
            <td>@vehicle.CostKm</td>
            <td>@vehicle.VehicleType</td>
            <td>@vehicle.CostDay</td>
            <td class="text-center"> <span class="badge 
                text-bg-@(vehicle.VehicleStatus is Common.Enums.VehicleStatuses.Available ? "success" : "danger")">
                @vehicle.VehicleStatus
                </span>
            </td>
        </tr>
        }
    </tbody>
</table>

<h3>Bookings</h3>
<table class="table table-hover mb-4">
    <thead>
        <tr>
            <th scope="col">RegNo</th>
            <th scope="col">Customer</th>
            <th scope="col">Odometer rented [km]</th>
            <th scope="col">Odometer returned [km]</th>
            <th scope="col">Date rented</th>
            <th scope="col">Date returned</th>
            <th scope="col">Cost [SEK]</th>
            <th scope="col" class="text-center" style="width: 100px">Booking status</th>
        </tr>
    </thead>

    <tbody class="table-group-divider">
        @foreach (var b in bp.GetBookings())
        {
            if (b.BookingValid is false) continue;
            <tr>
                <td>@b.RegNo</td>
                <td>@b.Customer</td>
                <td>@b.OdometerRented</td>
                <td>@b.OdometerReturned</td>
                <td>@b.DateRented.ToString("dd/MM/yyyy")</td>
                <td>@b.DateReturned?.ToString("dd/MM/yyyy")</td>
                <td>@(b.Cost > 0 ? Math.Round(b.Cost, 2) : "")</td>
                <td class="text-center">
                    <span class="badge
                text-bg-@(b.BookingClosed ? "primary" : "warning")">
                        @(b.BookingClosed ? "Closed" : "Open")
                    </span>
                </td>
            </tr>
        }
    </tbody>
</table>

@code
{
    VehicleStatuses vStatus = default;
}
